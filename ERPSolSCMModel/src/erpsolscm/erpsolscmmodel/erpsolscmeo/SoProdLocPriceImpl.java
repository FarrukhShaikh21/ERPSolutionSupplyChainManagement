package erpsolscm.erpsolscmmodel.erpsolscmeo;

import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobalsEntityImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jan 12 13:33:37 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SoProdLocPriceImpl extends ERPSolGlobalsEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Lineno,
        Productid,
        Locationid,
        DelearPrice,
        RetailPrice,
        Efrom,
        Eto,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        BrNetPrice,
        HoNetPrice,
        RPrice,
        WsPrice,
        Cost,
        FlatDiscount,
        IntraCompanyProductid,
        LpDiscount,
        InItems;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LINENO = AttributesEnum.Lineno.index();
    public static final int PRODUCTID = AttributesEnum.Productid.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int DELEARPRICE = AttributesEnum.DelearPrice.index();
    public static final int RETAILPRICE = AttributesEnum.RetailPrice.index();
    public static final int EFROM = AttributesEnum.Efrom.index();
    public static final int ETO = AttributesEnum.Eto.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int BRNETPRICE = AttributesEnum.BrNetPrice.index();
    public static final int HONETPRICE = AttributesEnum.HoNetPrice.index();
    public static final int RPRICE = AttributesEnum.RPrice.index();
    public static final int WSPRICE = AttributesEnum.WsPrice.index();
    public static final int COST = AttributesEnum.Cost.index();
    public static final int FLATDISCOUNT = AttributesEnum.FlatDiscount.index();
    public static final int INTRACOMPANYPRODUCTID = AttributesEnum.IntraCompanyProductid.index();
    public static final int LPDISCOUNT = AttributesEnum.LpDiscount.index();
    public static final int INITEMS = AttributesEnum.InItems.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SoProdLocPriceImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpsolscm.erpsolscmmodel.erpsolscmeo.SoProdLocPrice");
    }


    /**
     * Gets the attribute value for Lineno, using the alias name Lineno.
     * @return the value of Lineno
     */
    public Integer getLineno() {
        return (Integer) getAttributeInternal(LINENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lineno.
     * @param value value to set the Lineno
     */
    public void setLineno(Integer value) {
        setAttributeInternal(LINENO, value);
    }

    /**
     * Gets the attribute value for Productid, using the alias name Productid.
     * @return the value of Productid
     */
    public String getProductid() {
        return (String) getAttributeInternal(PRODUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Productid.
     * @param value value to set the Productid
     */
    public void setProductid(String value) {
        setAttributeInternal(PRODUCTID, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for DelearPrice, using the alias name DelearPrice.
     * @return the value of DelearPrice
     */
    public BigDecimal getDelearPrice() {
        return (BigDecimal) getAttributeInternal(DELEARPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DelearPrice.
     * @param value value to set the DelearPrice
     */
    public void setDelearPrice(BigDecimal value) {
        setAttributeInternal(DELEARPRICE, value);
    }

    /**
     * Gets the attribute value for RetailPrice, using the alias name RetailPrice.
     * @return the value of RetailPrice
     */
    public BigDecimal getRetailPrice() {
        return (BigDecimal) getAttributeInternal(RETAILPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RetailPrice.
     * @param value value to set the RetailPrice
     */
    public void setRetailPrice(BigDecimal value) {
        setAttributeInternal(RETAILPRICE, value);
    }

    /**
     * Gets the attribute value for Efrom, using the alias name Efrom.
     * @return the value of Efrom
     */
    public Date getEfrom() {
        return (Date) getAttributeInternal(EFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Efrom.
     * @param value value to set the Efrom
     */
    public void setEfrom(Date value) {
        setAttributeInternal(EFROM, value);
    }

    /**
     * Gets the attribute value for Eto, using the alias name Eto.
     * @return the value of Eto
     */
    public Date getEto() {
        return (Date) getAttributeInternal(ETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Eto.
     * @param value value to set the Eto
     */
    public void setEto(Date value) {
        setAttributeInternal(ETO, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for BrNetPrice, using the alias name BrNetPrice.
     * @return the value of BrNetPrice
     */
    public BigDecimal getBrNetPrice() {
        return (BigDecimal) getAttributeInternal(BRNETPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BrNetPrice.
     * @param value value to set the BrNetPrice
     */
    public void setBrNetPrice(BigDecimal value) {
        setAttributeInternal(BRNETPRICE, value);
    }

    /**
     * Gets the attribute value for HoNetPrice, using the alias name HoNetPrice.
     * @return the value of HoNetPrice
     */
    public BigDecimal getHoNetPrice() {
        return (BigDecimal) getAttributeInternal(HONETPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoNetPrice.
     * @param value value to set the HoNetPrice
     */
    public void setHoNetPrice(BigDecimal value) {
        setAttributeInternal(HONETPRICE, value);
    }

    /**
     * Gets the attribute value for RPrice, using the alias name RPrice.
     * @return the value of RPrice
     */
    public BigDecimal getRPrice() {
        return (BigDecimal) getAttributeInternal(RPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RPrice.
     * @param value value to set the RPrice
     */
    public void setRPrice(BigDecimal value) {
        setAttributeInternal(RPRICE, value);
    }

    /**
     * Gets the attribute value for WsPrice, using the alias name WsPrice.
     * @return the value of WsPrice
     */
    public BigDecimal getWsPrice() {
        return (BigDecimal) getAttributeInternal(WSPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WsPrice.
     * @param value value to set the WsPrice
     */
    public void setWsPrice(BigDecimal value) {
        setAttributeInternal(WSPRICE, value);
    }

    /**
     * Gets the attribute value for Cost, using the alias name Cost.
     * @return the value of Cost
     */
    public BigDecimal getCost() {
        return (BigDecimal) getAttributeInternal(COST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cost.
     * @param value value to set the Cost
     */
    public void setCost(BigDecimal value) {
        setAttributeInternal(COST, value);
    }

    /**
     * Gets the attribute value for FlatDiscount, using the alias name FlatDiscount.
     * @return the value of FlatDiscount
     */
    public BigDecimal getFlatDiscount() {
        return (BigDecimal) getAttributeInternal(FLATDISCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlatDiscount.
     * @param value value to set the FlatDiscount
     */
    public void setFlatDiscount(BigDecimal value) {
        setAttributeInternal(FLATDISCOUNT, value);
    }

    /**
     * Gets the attribute value for IntraCompanyProductid, using the alias name IntraCompanyProductid.
     * @return the value of IntraCompanyProductid
     */
    public String getIntraCompanyProductid() {
        return (String) getAttributeInternal(INTRACOMPANYPRODUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for IntraCompanyProductid.
     * @param value value to set the IntraCompanyProductid
     */
    public void setIntraCompanyProductid(String value) {
        setAttributeInternal(INTRACOMPANYPRODUCTID, value);
    }

    /**
     * Gets the attribute value for LpDiscount, using the alias name LpDiscount.
     * @return the value of LpDiscount
     */
    public BigDecimal getLpDiscount() {
        return (BigDecimal) getAttributeInternal(LPDISCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LpDiscount.
     * @param value value to set the LpDiscount
     */
    public void setLpDiscount(BigDecimal value) {
        setAttributeInternal(LPDISCOUNT, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getInItems() {
        return (EntityImpl) getAttributeInternal(INITEMS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setInItems(EntityImpl value) {
        setAttributeInternal(INITEMS, value);
    }


    /**
     * @param lineno key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer lineno) {
        return new Key(new Object[] { lineno });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setERPSolPKColumnName("Lineno");
        setERPSolPKSeqName("So_Prod_Loc_Price_seq");
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

