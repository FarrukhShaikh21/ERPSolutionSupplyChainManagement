package erpsolscm.erpsolscmmodel.erpsolscmeo;

import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobClassModel;
import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobalsEntityImpl;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 07 10:36:30 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AllCustomerSalespersonImpl extends ERPSolGlobalsEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CustLineno,
        Customerid,
        Salespersonid,
        Salesterritoryid,
        Id,
        Creditlimit,
        CurBalance,
        InActive,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        DefaultPerson,
        Divid,
        CustOldid,
        Customerseq,
        txtSalesPersonName,
        ApplyCreditLimit,
        SoSalesPersons,
        AllCustomers,
        AllCustomersSalePersonCl;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CUSTLINENO = AttributesEnum.CustLineno.index();
    public static final int CUSTOMERID = AttributesEnum.Customerid.index();
    public static final int SALESPERSONID = AttributesEnum.Salespersonid.index();
    public static final int SALESTERRITORYID = AttributesEnum.Salesterritoryid.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int CREDITLIMIT = AttributesEnum.Creditlimit.index();
    public static final int CURBALANCE = AttributesEnum.CurBalance.index();
    public static final int INACTIVE = AttributesEnum.InActive.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int DEFAULTPERSON = AttributesEnum.DefaultPerson.index();
    public static final int DIVID = AttributesEnum.Divid.index();
    public static final int CUSTOLDID = AttributesEnum.CustOldid.index();
    public static final int CUSTOMERSEQ = AttributesEnum.Customerseq.index();
    public static final int TXTSALESPERSONNAME = AttributesEnum.txtSalesPersonName.index();
    public static final int APPLYCREDITLIMIT = AttributesEnum.ApplyCreditLimit.index();
    public static final int SOSALESPERSONS = AttributesEnum.SoSalesPersons.index();
    public static final int ALLCUSTOMERS = AttributesEnum.AllCustomers.index();
    public static final int ALLCUSTOMERSSALEPERSONCL = AttributesEnum.AllCustomersSalePersonCl.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AllCustomerSalespersonImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpsolscm.erpsolscmmodel.erpsolscmeo.AllCustomerSalesperson");
    }


    /**
     * Gets the attribute value for CustLineno, using the alias name CustLineno.
     * @return the value of CustLineno
     */
    public Integer getCustLineno() {
        return (Integer) getAttributeInternal(CUSTLINENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustLineno.
     * @param value value to set the CustLineno
     */
    public void setCustLineno(Integer value) {
        setAttributeInternal(CUSTLINENO, value);
    }

    /**
     * Gets the attribute value for Customerid, using the alias name Customerid.
     * @return the value of Customerid
     */
    public String getCustomerid() {
        return (String) getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Customerid.
     * @param value value to set the Customerid
     */
    public void setCustomerid(String value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for Salespersonid, using the alias name Salespersonid.
     * @return the value of Salespersonid
     */
    public String getSalespersonid() {
        return (String) getAttributeInternal(SALESPERSONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Salespersonid.
     * @param value value to set the Salespersonid
     */
    public void setSalespersonid(String value) {
        setAttributeInternal(SALESPERSONID, value);
    }

    /**
     * Gets the attribute value for Salesterritoryid, using the alias name Salesterritoryid.
     * @return the value of Salesterritoryid
     */
    public String getSalesterritoryid() {
        return (String) getAttributeInternal(SALESTERRITORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Salesterritoryid.
     * @param value value to set the Salesterritoryid
     */
    public void setSalesterritoryid(String value) {
        setAttributeInternal(SALESTERRITORYID, value);
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Creditlimit, using the alias name Creditlimit.
     * @return the value of Creditlimit
     */
    public BigDecimal getCreditlimit() {
        return (BigDecimal) getAttributeInternal(CREDITLIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Creditlimit.
     * @param value value to set the Creditlimit
     */
    public void setCreditlimit(BigDecimal value) {
        setAttributeInternal(CREDITLIMIT, value);
    }

    /**
     * Gets the attribute value for CurBalance, using the alias name CurBalance.
     * @return the value of CurBalance
     */
    public BigDecimal getCurBalance() {
        return (BigDecimal) getAttributeInternal(CURBALANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurBalance.
     * @param value value to set the CurBalance
     */
    public void setCurBalance(BigDecimal value) {
        setAttributeInternal(CURBALANCE, value);
    }

    /**
     * Gets the attribute value for InActive, using the alias name InActive.
     * @return the value of InActive
     */
    public String getInActive() {
        return (String) getAttributeInternal(INACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InActive.
     * @param value value to set the InActive
     */
    public void setInActive(String value) {
        setAttributeInternal(INACTIVE, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for DefaultPerson, using the alias name DefaultPerson.
     * @return the value of DefaultPerson
     */
    public String getDefaultPerson() {
        return (String) getAttributeInternal(DEFAULTPERSON);
    }

    /**
     * Sets <code>value</code> as the attribute value for DefaultPerson.
     * @param value value to set the DefaultPerson
     */
    public void setDefaultPerson(String value) {
        setAttributeInternal(DEFAULTPERSON, value);
    }

    /**
     * Gets the attribute value for Divid, using the alias name Divid.
     * @return the value of Divid
     */
    public String getDivid() {
        return (String) getAttributeInternal(DIVID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Divid.
     * @param value value to set the Divid
     */
    public void setDivid(String value) {
        setAttributeInternal(DIVID, value);
    }

    /**
     * Gets the attribute value for CustOldid, using the alias name CustOldid.
     * @return the value of CustOldid
     */
    public String getCustOldid() {
        return (String) getAttributeInternal(CUSTOLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustOldid.
     * @param value value to set the CustOldid
     */
    public void setCustOldid(String value) {
        setAttributeInternal(CUSTOLDID, value);
    }

    /**
     * Gets the attribute value for Customerseq, using the alias name Customerseq.
     * @return the value of Customerseq
     */
    public Integer getCustomerseq() {
        return (Integer) getAttributeInternal(CUSTOMERSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Customerseq.
     * @param value value to set the Customerseq
     */
    public void setCustomerseq(Integer value) {
        setAttributeInternal(CUSTOMERSEQ, value);
    }

    /**
     * Gets the attribute value for txtSalesPersonName, using the alias name txtSalesPersonName.
     * @return the value of txtSalesPersonName
     */
    public String gettxtSalesPersonName() {
        return (String) getAttributeInternal(TXTSALESPERSONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtSalesPersonName.
     * @param value value to set the txtSalesPersonName
     */
    public void settxtSalesPersonName(String value) {
        setAttributeInternal(TXTSALESPERSONNAME, value);
    }

    /**
     * Gets the attribute value for ApplyCreditLimit, using the alias name ApplyCreditLimit.
     * @return the value of ApplyCreditLimit
     */
    public String getApplyCreditLimit() {
        return (String) getAttributeInternal(APPLYCREDITLIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApplyCreditLimit.
     * @param value value to set the ApplyCreditLimit
     */
    public void setApplyCreditLimit(String value) {
        setAttributeInternal(APPLYCREDITLIMIT, value);
    }

    /**
     * @return the associated entity SoSalesPersonsImpl.
     */
    public SoSalesPersonsImpl getSoSalesPersons() {
        return (SoSalesPersonsImpl) getAttributeInternal(SOSALESPERSONS);
    }

    /**
     * Sets <code>value</code> as the associated entity SoSalesPersonsImpl.
     */
    public void setSoSalesPersons(SoSalesPersonsImpl value) {
        setAttributeInternal(SOSALESPERSONS, value);
    }


    /**
     * @return the associated entity AllCustomersImpl.
     */
    public AllCustomersImpl getAllCustomers() {
        return (AllCustomersImpl) getAttributeInternal(ALLCUSTOMERS);
    }

    /**
     * Sets <code>value</code> as the associated entity AllCustomersImpl.
     */
    public void setAllCustomers(AllCustomersImpl value) {
        setAttributeInternal(ALLCUSTOMERS, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAllCustomersSalePersonCl() {
        return (RowIterator) getAttributeInternal(ALLCUSTOMERSSALEPERSONCL);
    }


    /**
     * @param custLineno key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer custLineno) {
        return new Key(new Object[] { custLineno });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setERPSolPKColumnName("CustLineno");
        setERPSolPKSeqName("all_customer_salesperson_seq");
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT) {
            System.out.println("this is a-CUSTOMERSALESPERSON");
           populateAttributeAsChanged(CUSTOMERID, getAllCustomers().getAttribute("Customerid").toString());
           System.out.println("this is b");
           String pkValue="FUNC_GET_MAX_ID('ALL_CUSTOMER_SALESPERSON WHERE CUSTOMERID=''"+getCustomerid()+"''','ID')";
           System.out.println("this is c");
           System.out.println(pkValue + "pk value--CUSTSP");
           String result= ERPSolGlobClassModel.doGetERPSolPrimaryKeyValueModel(getDBTransaction(), pkValue, "dual", null, null);
           populateAttributeAsChanged(ID, Integer.parseInt(result));
        }
        super.doDML(operation, e);
    }
}

